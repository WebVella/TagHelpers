@page "/test"
@model WebVella.TagHelpers.Site.Pages.TestModel
@addTagHelper *, WebVella.TagHelpers
@using WebVella.TagHelpers.Models;
@using System.Web;
@{
	Layout = null;

	var html = "<div class=\"text\">text</div>";

}

<!DOCTYPE html>

<html>
<head>
	<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
	<title>TagHelpers Kitchen Sink</title>
	<meta charset="utf-8">

	<wv-includes></wv-includes>
	@*<script src="/_content/WebVella.TagHelpers/lib/ckeditor5/ckeditor.js"></script>*@

	@* Demo Only *@
	<link href="/css/demo.css" rel="stylesheet" type="text/css" />

</head>
<body>

	<div class="row">
		<div class="col-6">
			<div class="card mt-3 mb-3">
				<div class="card-header">
					Form
				</div>
				<div class="card-body">
					<wv-field-select label-text="FieldLabel" name="text" mode="Display" value="5" options="@(new List<WvSelectOption>{new WvSelectOption{Value="1",Label="one"}})"></wv-field-select>
				</div>
			</div>
		</div>
		<div class="col-6">
			<div class="card mt-3 mb-3">
				<div class="card-header">
					Form
				</div>
				<div class="card-body">
					@*<wv-field-html value="@html" label-text="FieldLabel" name="text" mode="InlineEdit" api-url="/"></wv-field-html>*@
				</div>
			</div>
		</div>
	</div>
	@*<script>
			var config = {};
			config.language = 'en';

			ClassicEditor
			.create(document.querySelector('#editor'), config)
			.then(function (editor) {
				if(!HtmlFieldEditors){
					HtmlFieldEditors = {};
				}
				HtmlFieldEditors[fieldId] = editor;
				editor.model.document.on('change:data', function () {
					editor.updateSourceElement();
					var customEvent = new Event('WvFieldHtml_Change');
					var inputElement = document.getElementById('editor');
					//If the element still exists
					if (inputElement) {
						customEvent.payload = {
							value: editor.getData(),
							fieldId: fieldId,
							fieldName: inputElement.name
						};
						document.dispatchEvent(customEvent);
						console.log(customEvent);
					}
				});
			})
			.catch(function (error) {
				console.error(error);
			});
	</script>*@
</body>
</html>
